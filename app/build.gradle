/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.mongodb:mongodb-driver-sync:4.11.0'

    implementation 'org.slf4j:slf4j-api:1.7.29'
    runtimeOnly 'ch.qos.logback:logback-classic:1.3.11'

    implementation fileTree(dir: 'src/main/resources/lib', include: ['*.jar'])
}

application {
    // Define the main class for the application.
    mainClass = 'cse110_project.App'
}

run {
    // Add VM options for JavaFX.
    jvmArgs = ['--module-path', project.property('javafx_path'), '--add-modules', 'javafx.controls,javafx.fxml']
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

